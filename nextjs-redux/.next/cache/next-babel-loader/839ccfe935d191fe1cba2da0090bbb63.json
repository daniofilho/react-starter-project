{"ast":null,"code":"var _jsxFileName = \"/home/daniofilho/Trabalho/Github/react-starter-project/nextjs-redux/components/counter.js\";\nvar __jsx = React.createElement;\nimport React from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { incrementCount, decrementCount, resetCount } from '../store';\n\nvar countSelector = function countSelector(state) {\n  return state.count;\n};\n\nvar useCounter = function useCounter() {\n  var dispatch = useDispatch();\n\n  var increment = function increment() {\n    dispatch(incrementCount());\n  };\n\n  var decrement = function decrement() {\n    dispatch(decrementCount());\n  };\n\n  var reset = function reset() {\n    dispatch(resetCount());\n  };\n\n  return {\n    increment: increment,\n    decrement: decrement,\n    reset: reset\n  };\n};\n\nfunction Counter() {\n  var count = useSelector(countSelector);\n\n  var _useCounter = useCounter(),\n      increment = _useCounter.increment,\n      decrement = _useCounter.decrement,\n      reset = _useCounter.reset;\n\n  return __jsx(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26\n    },\n    __self: this\n  }, __jsx(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27\n    },\n    __self: this\n  }, \"Count: \", __jsx(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28\n    },\n    __self: this\n  }, count)), __jsx(\"button\", {\n    onClick: increment,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30\n    },\n    __self: this\n  }, \"+1\"), __jsx(\"button\", {\n    onClick: decrement,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31\n    },\n    __self: this\n  }, \"-1\"), __jsx(\"button\", {\n    onClick: reset,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32\n    },\n    __self: this\n  }, \"Reset\"));\n}\n\nexport default Counter;","map":{"version":3,"sources":["/home/daniofilho/Trabalho/Github/react-starter-project/nextjs-redux/components/counter.js"],"names":["React","useSelector","useDispatch","incrementCount","decrementCount","resetCount","countSelector","state","count","useCounter","dispatch","increment","decrement","reset","Counter"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,cAAT,EAAyBC,cAAzB,EAAyCC,UAAzC,QAA2D,UAA3D;;AAEA,IAAMC,aAAa,GAAG,SAAhBA,aAAgB,CAAAC,KAAK;AAAA,SAAIA,KAAK,CAACC,KAAV;AAAA,CAA3B;;AAEA,IAAMC,UAAU,GAAG,SAAbA,UAAa,GAAM;AACvB,MAAMC,QAAQ,GAAGR,WAAW,EAA5B;;AACA,MAAMS,SAAS,GAAG,SAAZA,SAAY,GAAM;AACtBD,IAAAA,QAAQ,CAACP,cAAc,EAAf,CAAR;AACD,GAFD;;AAGA,MAAMS,SAAS,GAAG,SAAZA,SAAY,GAAM;AACtBF,IAAAA,QAAQ,CAACN,cAAc,EAAf,CAAR;AACD,GAFD;;AAGA,MAAMS,KAAK,GAAG,SAARA,KAAQ,GAAM;AAClBH,IAAAA,QAAQ,CAACL,UAAU,EAAX,CAAR;AACD,GAFD;;AAIA,SAAO;AAAEM,IAAAA,SAAS,EAATA,SAAF;AAAaC,IAAAA,SAAS,EAATA,SAAb;AAAwBC,IAAAA,KAAK,EAALA;AAAxB,GAAP;AACD,CAbD;;AAeA,SAASC,OAAT,GAAoB;AAClB,MAAMN,KAAK,GAAGP,WAAW,CAACK,aAAD,CAAzB;;AADkB,oBAEsBG,UAAU,EAFhC;AAAA,MAEVE,SAFU,eAEVA,SAFU;AAAA,MAECC,SAFD,eAECA,SAFD;AAAA,MAEYC,KAFZ,eAEYA,KAFZ;;AAGlB,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBACS;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAOL,KAAP,CADT,CADF,EAIE;AAAQ,IAAA,OAAO,EAAEG,SAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAJF,EAKE;AAAQ,IAAA,OAAO,EAAEC,SAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UALF,EAME;AAAQ,IAAA,OAAO,EAAEC,KAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aANF,CADF;AAUD;;AAED,eAAeC,OAAf","sourcesContent":["import React from 'react'\nimport { useSelector, useDispatch } from 'react-redux'\nimport { incrementCount, decrementCount, resetCount } from '../store'\n\nconst countSelector = state => state.count\n\nconst useCounter = () => {\n  const dispatch = useDispatch()\n  const increment = () => {\n    dispatch(incrementCount())\n  }\n  const decrement = () => {\n    dispatch(decrementCount())\n  }\n  const reset = () => {\n    dispatch(resetCount())\n  }\n\n  return { increment, decrement, reset }\n}\n\nfunction Counter () {\n  const count = useSelector(countSelector)\n  const { increment, decrement, reset } = useCounter()\n  return (\n    <div>\n      <h1>\n        Count: <span>{count}</span>\n      </h1>\n      <button onClick={increment}>+1</button>\n      <button onClick={decrement}>-1</button>\n      <button onClick={reset}>Reset</button>\n    </div>\n  )\n}\n\nexport default Counter\n"]},"metadata":{},"sourceType":"module"}